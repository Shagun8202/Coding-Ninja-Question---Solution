#include <bits/stdc++.h> 
#include<queue>
class node{
    public:
    int data;
    int i;
    int j;
    node(int data,int row,int col){
        this->data = data;
        i = row;
        j = col;
    }
 };
class compare{
    public:
    bool operator()(node* a, node* b){
        return a->data > b->data;
    }
};
vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
   priority_queue<node* , vector<node*>,compare> q;
                   for(int i = 0 ;i<k;i++){
                       node* main = new node(kArrays[i][0],i, 0);
                       q.push(main);
                   }
       vector<int> ans;
   while(q.size()>0){
                   node* tmp = q.top();
                  ans.push_back(tmp->data);
                  q.pop();
                  int i = tmp->i;
                  int j = tmp->j;
                  if(j+1 < kArrays[i].size()){
                      node* next = new node(kArrays[i][j+1],i,j+1);
                      q.push(next);
                  }
              }   
    return ans;
}
