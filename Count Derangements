#define MOD 1000000007
#include<vector>
// long long int solve(int n,vector<long long int> &dp){
//         if(n==1)
//     {
//         return 0;
//     }
//     if(n==2){
//         return 1;
//     }
//     if(dp[n] != -1){
//         return dp[n];
//     }
    
//     dp[n] = ((n-1)%MOD *(solve(n-1,dp)% MOD + solve(n-2,dp)%MOD)%MOD) % MOD;
    
//     return dp[n];
// }
long long int solve(int n , vector<long long int> &dp){
    dp[1]=0;
    dp[2]=1;
    for(int i = 3;i<=n;i++){
        long long int first = dp[i-1];
        long long int second = dp[i-2];
        long long int sum = ((i-1) *(first%MOD + second%MOD)%MOD)%MOD;
        dp[i]= sum;
    }
    return dp[n];
    }
long long int countDerangements(int n) {
    // base case 
//     if(n==1)
//     {
//         return 0;
//     }
//     if(n==0){
//         return 1;
//     }
    
//     long long int ans = (n-1)*(countDerangements(n-1) + countDerangements(n-2)) % MOD;
//     return ans;
    vector<long long int> dp(n+1,-1);
    long long int ans = solve(n,dp);
    return ans;
}
